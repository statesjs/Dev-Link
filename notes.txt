IMPORTANT ***
-----
Make sure to come back to the back end to implement multer and adding connection to
cloudinary image hosting
-----
SECURITY NOTES **
-----
should consider adding joi, if time allots . security and validation are pretty
high already:

mongoose schema: https://mongoosejs.com/docs/guide.html
helmet: https://www.npmjs.com/package/helmet
select method to hide data: https://www.geeksforgeeks.org/mongoose-query-prototype-select-api/
jwt encryption: https://www.npmjs.com/package/jsonwebtoken
bcryptjs- 10 salt rounds : https://www.npmjs.com/package/bcryptjs
regex: https://digitalfortress.tech/tips/top-15-commonly-used-regex/

-----
ATTRIBUTIONS *

logo- <a href="https://www.flaticon.com/free-icons/book" title="book icons">Book icons created by mikan933 - Flaticon</a>
light/dark icon - <a href="https://www.flaticon.com/free-icons/light-dark" title="light dark icons">Light dark icons created by Any Icon - Flaticon</a>
-----
TODO *

add comments and have it display below resource
adding comment amount below recouse preview
need to limit preview to 10 OR consider pagination
optimize images?
tiptap bullets are acting buggy
logout should have a settimeout rendering a goodbye
profile should have a stat card 

-----
req.user.id from auth protected routes, or just tokenated sessions will
use reference the user mongodbid 


5/9 9:34am -



added a reference field under resources -> author to fill with the user 
mongodb id and reference the user collection for the related user, 
this is in conjuction with auth middleware to make more dynamic, strictly 
tying related PROTECTED data"

5/9 10:12am - 

refactored ALL routes to implement jwt req.user object

refactored comment model to:
- reference other collections
- created indexes for faster query

refactored user model to:
- reference other collections related
- protect sensitive info from query
- created indexes for better query times

end notes for this entry:
-should consider select options colliding, maybe have to just set false on 
the model, then only override on the routes when needed

5/9 11:05am - 

general cleanup + added forgotten but imported libraries

5/12 11:50am - 

testing and readign through docx on material UI, going to refer back to studying through ReactJS once more before tackling forms and
focus on a display and TIPTAP integration

5/13 -

getting rid of Material UI, ill refer to it later, for now, it's a bit too hard for
me to read, having better success making things raw.

fixed mismatch of old endpoint naming conventions requests to the front end, causing login reqs to fail(/api/users vs api/auth)

displaying resources, will reformat later

5/14 - 

- fixed display for resources, limit to 5 on homepage,

- set routes to be private by verifying token

- fixed buggy race conditions

- fixed logout

- added skeleton tiptap editor

- truncated resources to be  "preview"

-strip html because tiptap outputs doenst interpret html

- need to implement update n delete

- mabe delete some features as its buggy and should be handled better

- created update functionality 


